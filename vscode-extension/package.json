{
  "name": "code-blocks",
  "publisher": "selfint",
  "displayName": "Code Blocks",
  "description": "An extension for manipulating your code's syntax tree.",
  "repository": {
    "url": "https://github.com/selfint/code-blocks",
    "directory": "vscode-extension",
    "type": "git"
  },
  "bugs": {
    "url": "https://github.com/selfint/code-blocks/issues",
    "email": "selfint@gmail.com"
  },
  "homepage": "https://github.com/selfint/code-blocks#readme",
  "icon": "./assets/extension-logo.png",
  "version": "0.5.0",
  "private": true,
  "license": "MIT",
  "engines": {
    "vscode": "^1.46.0"
  },
  "categories": [
    "Visualization",
    "Other"
  ],
  "keywords": [
    "refactor",
    "tree-sitter",
    "custom-editor",
    "code-blocks",
    "blocks",
    "visualization"
  ],
  "preview": true,
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "customEditors": [
      {
        "viewType": "codeBlocks.editor",
        "displayName": "Code Blocks",
        "selector": [
          {
            "filenamePattern": "*"
          }
        ],
        "priority": "option"
      }
    ],
    "commands": [
      {
        "command": "codeBlocks.open",
        "title": "Code Blocks: Open active file in Code Blocks editor"
      },
      {
        "command": "codeBlocks.openToTheSide",
        "title": "Code Blocks: Open active file in Code Blocks editor to the side"
      },
      {
        "command": "codeBlocks.toggle",
        "title": "Code Blocks: Toggle block mode"
      },
      {
        "command": "codeBlocks.moveUp",
        "title": "Code Blocks: Move selected block up"
      },
      {
        "command": "codeBlocks.moveDown",
        "title": "Code Blocks: Move selected block down"
      },
      {
        "command": "codeBlocks.moveUpForce",
        "title": "Code Blocks: Force move selected block up"
      },
      {
        "command": "codeBlocks.moveDownForce",
        "title": "Code Blocks: Force move selected block down"
      },
      {
        "command": "codeBlocks.navigateUp",
        "title": "Code Blocks: Navigate to previous block"
      },
      {
        "command": "codeBlocks.navigateDown",
        "title": "Code Blocks: Navigate to next block"
      },
      {
        "command": "codeBlocks.navigateUpForce",
        "title": "Code Blocks: Force navigate to previous block"
      },
      {
        "command": "codeBlocks.navigateDownForce",
        "title": "Code Blocks: Force navigate to next block"
      },
      {
        "command": "codeBlocks.selectBlock",
        "title": "Code Blocks: Select current block"
      }
    ],
    "keybindings": [
      {
        "command": "codeBlocks.moveUp",
        "key": "alt+up",
        "when": "editorTextFocus && codeBlocks.blockMode"
      },
      {
        "command": "codeBlocks.moveDown",
        "key": "alt+down",
        "when": "editorTextFocus && codeBlocks.blockMode"
      },
      {
        "command": "codeBlocks.moveUpForce",
        "key": "alt+shift+up",
        "when": "editorTextFocus && codeBlocks.blockMode"
      },
      {
        "command": "codeBlocks.moveDownForce",
        "key": "alt+shift+down",
        "when": "editorTextFocus && codeBlocks.blockMode"
      },
      {
        "command": "codeBlocks.navigateUp",
        "key": "ctrl+up",
        "mac": "cmd+up",
        "when": "editorTextFocus && codeBlocks.blockMode"
      },
      {
        "command": "codeBlocks.navigateDown",
        "key": "ctrl+down",
        "mac": "cmd+down",
        "when": "editorTextFocus && codeBlocks.blockMode"
      },
      {
        "command": "codeBlocks.navigateUpForce",
        "key": "ctrl+shift+up",
        "mac": "cmd+shift+up",
        "when": "editorTextFocus && codeBlocks.blockMode"
      },
      {
        "command": "codeBlocks.navigateDownForce",
        "key": "ctrl+shift+down",
        "mac": "cmd+shift+down",
        "when": "editorTextFocus && codeBlocks.blockMode"
      }
    ],
    "configuration": {
      "title": "CodeBlocks",
      "properties": {
        "codeBlocks.colors": {
          "type": "object",
          "description": "Colors to use for block mode",
          "default": {
            "selected": "var(--vscode-inputOption-activeBackground)",
            "target": "var(--vscode-editor-selectionHighlightBackground)",
            "forceTarget": "var(--vscode-editor-linkedEditingBackground)"
          }
        },
        "codeBlocks.binPath": {
          "type": "string",
          "default": null,
          "description": "Executable to use for 'code-blocks-cli'"
        },
        "codeBlocks.languageSupport": {
          "type": "object",
          "default": {
            "rust": {
              "parserInstaller": {
                "downloadCmd": "git clone https://github.com/tree-sitter/tree-sitter-rust",
                "libraryName": "tree_sitter_rust",
                "languageFnSymbol": "language"
              },
              "queries": [
                "(([ (attribute_item) (line_comment) ] @header . [ (attribute_item) (line_comment) ]* @header )? . (function_item) @item)",
                "(([ (attribute_item) (line_comment) ] @header . [ (attribute_item) (line_comment) ]* @header )? . (mod_item) @item)",
                "(([ (attribute_item) (line_comment) ] @header . [ (attribute_item) (line_comment) ]* @header )? . (struct_item) @item)",
                "(([ (attribute_item) (line_comment) ] @header . [ (attribute_item) (line_comment) ]* @header )? . (impl_item) @item)",
                "(([ (attribute_item) (line_comment) ] @header . [ (attribute_item) (line_comment) ]* @header )? . (enum_item) @item)",
                "(match_arm) @arm"
              ]
            },
            "typescript": {
              "parserInstaller": {
                "downloadCmd": "git clone https://github.com/tree-sitter/tree-sitter-typescript",
                "libraryName": "tree_sitter_typescript",
                "languageFnSymbol": "language_typescript"
              },
              "queries": [
                "( (comment)* @header . (class_declaration) @item)",
                "( (comment)* @header . (method_definition) @item)",
                "( (comment)* @header . (function_declaration) @item)",
                "( (comment)* @header . (export_statement) @item)"
              ]
            },
            "typescriptreact": {
              "parserInstaller": {
                "downloadCmd": "git clone https://github.com/tree-sitter/tree-sitter-typescript",
                "libraryName": "tree_sitter_typescript",
                "languageFnSymbol": "language_tsx"
              },
              "queries": [
                "( (comment)* @header . (class_declaration) @item)",
                "( (comment)* @header . (method_definition) @item)",
                "( (comment)* @header . (function_declaration) @item)",
                "( (comment)* @header . (export_statement) @item)",
                "(jsx_element) @item",
                "(jsx_self_closing_element) @item"
              ]
            },
            "svelte": {
              "parserInstaller": {
                "downloadCmd": "git clone https://github.com/Himujjal/tree-sitter-svelte",
                "libraryName": "tree_sitter_svelte",
                "languageFnSymbol": "language"
              },
              "queries": [
                "( (comment)* @header . (element) @item)",
                "( (comment)* @header . (each_statement) @item)",
                "( (comment)* @header . (if_statement) @item)",
                "( (comment)* @header . (style_element) @item)",
                "( (comment)* @header . (script_element) @item)"
              ]
            },
            "python": {
              "parserInstaller": {
                "downloadCmd": "git clone https://github.com/tree-sitter/tree-sitter-python",
                "libraryName": "tree_sitter_python",
                "languageFnSymbol": "language"
              },
              "queries": [
                "(class_definition) @item",
                "(function_definition) @item",
                "(decorated_definition) @item"
              ]
            },
            "java": {
              "parserInstaller": {
                "downloadCmd": "git clone https://github.com/tree-sitter/tree-sitter-java",
                "libraryName": "tree_sitter_java",
                "languageFnSymbol": "language"
              },
              "queries": [
                "( (block_comment)* @header . (class_declaration) @item)",
                "( (block_comment)* @header . (method_declaration) @item)"
              ]
            }
          }
        }
      }
    }
  },
  "scripts": {
    "install:all": "yarn install && cd webview-ui && yarn install",
    "start:webview": "cd webview-ui && yarn run dev",
    "build:webview": "cd webview-ui && yarn run build",
    "vscode:prepublish": "yarn run esbuild-base --minify",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "yarn run esbuild-base --sourcemap",
    "esbuild-watch": "yarn run esbuild-base --sourcemap --watch",
    "lint": "tsc --noEmit && eslint src --ext ts"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.46.0",
    "@types/which": "^2.0.1",
    "@typescript-eslint/eslint-plugin": "^5.54.0",
    "@typescript-eslint/parser": "^5.54.0",
    "esbuild": "^0.17.10",
    "eslint": "^8.35.0",
    "eslint-plugin-github": "^4.6.1",
    "glob": "^7.1.6",
    "prettier": "^2.2.1",
    "typescript": "^4.9.5",
    "vscode-test": "^1.5.0"
  },
  "dependencies": {}
}